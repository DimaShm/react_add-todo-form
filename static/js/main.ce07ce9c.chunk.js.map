{"version":3,"sources":["components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","id","username","TodoList","todos","map","todo","classNames","completed","title","usersFromServer","find","userId","visibleTodos","App","state","length","emptyTitle","emptyName","findIndex","forEach","addNewTodo","setState","push","handleInput","event","text","currentTarget","value","replace","handleSelect","this","action","method","onSubmit","preventDefault","type","placeholder","onChange","disabled","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce07ce9c.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../type/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return user ? (\n    <a className=\"UserInfo\" href={user.email || ''}>\n      {user.name}\n    </a>\n  ) : null;\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../type/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <article\n          data-id={todo.id}\n          className={classNames(\n            'TodoInfo',\n            {\n              'TodoInfo--completed': todo.completed,\n            },\n          )}\n        >\n          <h2 className=\"TodoInfo__title\">\n            {todo.title}\n          </h2>\n\n          <UserInfo user={[...usersFromServer]\n            .find(user => user.id === todo.userId) || null}\n          />\n        </article>\n      ))}\n\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { Component } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\ntype State = {\n  title: string,\n  name: string,\n  id: number,\n  emptyTitle: boolean,\n  emptyName: boolean,\n};\n\nconst visibleTodos = [...todosFromServer];\n\nexport class App extends Component <{}, State> {\n  state = {\n    title: '',\n    name: 'Choose a user',\n    id: visibleTodos.length - 1,\n    emptyTitle: false,\n    emptyName: false,\n  };\n\n  findIndex = () => {\n    let id = 0;\n\n    usersFromServer.forEach(user => {\n      if (user.name === this.state.name) {\n        id = user.id;\n      }\n    });\n\n    return id;\n  };\n\n  addNewTodo = () => {\n    if (this.state.title === '') {\n      this.setState({ emptyTitle: true });\n    }\n\n    if (this.state.name === 'Choose a user') {\n      this.setState({ emptyName: true });\n    }\n\n    if (this.state.title === '' || this.state.name === 'Choose a user') {\n      return;\n    }\n\n    if (!this.state.emptyTitle && !this.state.emptyName) {\n      this.setState(state => ({ id: state.id + 1 }));\n      visibleTodos.push({\n        id: this.state.id,\n        title: this.state.title,\n        completed: false,\n        userId: this.findIndex(),\n      });\n    }\n  };\n\n  handleInput = (event: React.FormEvent<HTMLInputElement>) => {\n    const text = event.currentTarget.value;\n\n    this.setState({\n      title: text.replace(/[^a-z + A-Z + а-я + А-Я +\\d]/g, ''),\n    });\n\n    this.setState({ emptyTitle: false });\n  };\n\n  handleSelect = (event: React.FormEvent<HTMLSelectElement>) => {\n    this.setState({ name: event.currentTarget.value });\n    this.setState({ emptyName: false });\n  };\n\n  render() {\n    const {\n      title, name, emptyName, emptyTitle,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n\n        <form\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={(event) => event.preventDefault()}\n        >\n          <div className=\"field\">\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              name=\"title\"\n              value={title}\n              onChange={this.handleInput}\n            />\n\n            {emptyTitle\n              && (\n                <span className=\"error\">\n                  Please enter a title\n                </span>\n              )}\n          </div>\n\n          <div className=\"field\">\n            <select\n              data-cy=\"userSelect\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleSelect}\n            >\n              <option\n                value=\"\"\n                disabled={name !== 'Choose a user'}\n              >\n                Choose a user\n              </option>\n\n              {usersFromServer.map(user => (\n                <option\n                  key={user.name}\n                  value={user.name}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n            {emptyName\n              && (\n                <span className=\"error\">\n                  Please choose a user\n                </span>\n              )}\n          </div>\n\n          <button\n            type=\"submit\"\n            data-cy=\"submitButton\"\n            onClick={this.addNewTodo}\n          >\n            Add\n          </button>\n        </form>\n\n        <TodoList todos={visibleTodos} />\n      </div>\n    );\n  }\n}\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}